<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.biz.shopverse.mapper.member.MemberMapper">
    <select id="findByLoginId" resultType="org.biz.shopverse.domain.member.Member">
        SELECT 
            m.id,
            m.login_id,
            m.password,
            m.name,
            m.nickname,
            m.phone,
            m.email,
            m.gender,
            m.birth_date,
            m.is_social,
            m.social_provider,
            m.marketing_yn,
            m.sms_yn,
            m.email_yn,
            m.point,
            m.status,
            m.last_login_at,
            m.created_at,
            m.updated_at
        FROM members m
        WHERE login_id = #{loginId}
    </select>

    <resultMap id="memberWithRolesResultMap" type="org.biz.shopverse.dto.member.MemberWithRoles">
        <result property="name" column="name"/>
        <result property="loginId" column="login_id"/>
        <result property="password" column="password"/>
        <result property="roles" column="roles" typeHandler="org.apache.ibatis.type.ArrayTypeHandler"/>
    </resultMap>

    <select id="findByMemberWithRoles" resultMap="memberWithRolesResultMap">
        SELECT
            m.name
            , m.login_id
            , m."password"
            , ARRAY_AGG(r.role_code) as roles
        FROM members m
            INNER JOIN member_roles mr
                ON mr.login_id = m.login_id
            INNER JOIN roles r
                ON r.role_id = mr.role_id
        WHERE m.LOGIN_ID = #{loginId}
        GROUP BY m.name, m.LOGIN_ID, m."password"
    </select>
    
    <select id="existsByLoginId" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 
            FROM members 
            WHERE login_id = #{loginId}
        )
    </select>

    <select id="existsByEmail" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 
            FROM members 
            WHERE email = #{email}
        )
    </select>

    <insert id="createMember" parameterType="org.biz.shopverse.dto.member.request.MemberCreateRequest">
        INSERT INTO members (
            login_id,
            password,
            name,
            nickname,
            phone,
            email,
            gender,
            birth_date,
            is_social,
            social_provider,
            marketing_yn,
            sms_yn,
            email_yn,
            point,
            status,
            created_at,
            updated_at
        ) VALUES (
            #{loginId},
            #{password},
            #{name},
            #{nickname},
            #{phone},
            #{email},
            #{gender},
            #{birthDate},
            #{isSocial},
            #{socialProvider},
            #{marketingYn},
            #{smsYn},
            #{emailYn},
            0,
            'ACTIVE',
            NOW(),
            NOW()
        )
    </insert>
</mapper> 